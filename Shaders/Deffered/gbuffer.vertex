#version 450

layout (location = 0) in vec3 inPos;
layout (location = 1) in vec3 inNormal;
layout (location = 2) in vec2 inUV;

layout (binding = 0) uniform UBO
{
	 mat4 projection;
	 mat4 model;
	 mat4 view;
}ubo;

layout(location = 0) out vec3 outPosition;
layout(location = 1) out vec3 outNormal;
layout(location = 2) out vec2 outUV;

void main()
{
	vec4 viewPosition = ubo.view * ubo.model * vec4(inPos, 1.0);
    
    outPosition = viewPosition.xyz;

    gl_Position = ubo.projection * viewPosition;

	outUV = inUV;
	outUV.t = 1.0 - inUV.t;

	outNormal = normalize(mat3(ubo.model) * inNormal);
}